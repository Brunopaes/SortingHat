package paes.test.c2.sigmoid;

public class SigmoidTestC2 {
    public static void main(String[] args) {
        int n = 10, minValue = 0;
        String result = "";

        double[][] inputValues = {
                {0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1}, {0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1},
                {0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1},
                {1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1}, {0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1}, {1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0},
                {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0},
                {1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0}, {1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0},
                {1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0}, {0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0},
                {0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0}, {0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1},
                {0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1}, {1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0},
                {1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1},
                {0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0}};

        double[] hli1 = new double[n];
        double[] hlo1 = new double[n];

        double[] hli2 = new double[n];
        double[] hlo2 = new double[n];

        double[] eli = new double[3];
        double[] elo = new double[3];

        double[][] wl1 = {
                {6.256703796264872E16, 6.2115374510778648E16, 1.7813475114634022E16, 4.4746216540576408E16, 4.1473173034953088E16, 4.3651763126376424E16, 6.5081377937110096E16, 5.0759536101440384E16, 3.5332898016944604E16, 6.212202151558925E15},
                {5.9316903116480088E16, 2.5370405308445625E15, 2.2561516444087504E16, 5.5049704479937216E16, 3.5329192327707576E16, 5.94353441601826E16, 2.971192898332532E16, 1.5523575151785784E16, 6.6637573000950688E16, 4.3115664260419016E16},
                {3.455442606571026E16, 1.1487039598431602E16, 3.0811116270661716E16, 6.2737998115574768E16, 5.4760616302045064E16, 1.0808523940300198E16, 1.9026385986303076E16, 6.7207630011255896E16, 6.4333813060820904E16, 3.3575991206161976E16},
                {1.4197552778918658E15, 2.710049439325014E16, 3.1019624769551972E16, 2.6686285040330062E14, 7.423889549790167E15, 9.646405549566992E15, 3.6514116271455432E16, 3.522457202496932E16, 6.1324929692649936E16, 1.0241829823639266E16},
                {5.394090728709508E16, 2.1922838060862732E15, 4.0481424774355664E16, 4.68098059332588E15, 9.239709256619494E15, 3.6840236931145768E16, 5.724590662690902E15, 8.648742851720052E15, -8.99486980215258E13, 5.245803459256996E16},
                {2.386658507226988E16, 6.3272613090846104E16, 1.9498153213102792E16, 6.6283285187975168E16, 6.6336217737967976E16, 1.1104110165610731E15, 3.8187265916703424E16, 1.4255391081430848E16, 2.4228762049041604E16, 6.0950163446669304E16},
                {3.6946144170877755E15, 4.7475294373820528E16, 6.1182404796732456E16, 5.3567184694085288E16, 5.181663798151632E16, 4.703757384001835E15, 1.0946833543675326E16, 4.8744355059319944E16, 3.0653509464170148E16, 2.8576970353779696E16},
                {5.0983524236072032E16, 3.1270012530202948E16, 3.884232097814064E16, 4.3496744427837696E16, 3.2009575274654772E16, 3.2386410846994692E16, 2.3123669058907428E16, 3.5232888621775396E16, 2.6638454660467088E16, 2.999516429814872E16},
                {6.6284041827079896E16, 3.9073384950708256E16, 4.7892332646016688E16, 6.126640059853741E15, 5.0313253812325024E16, 2.6221205440720765E15, 1.9369467432786148E16, 2.7094991294769796E16, 6.1543551406877512E16, 3.5194187008866088E16},
                {1.1513625475507356E16, 3.0166327989237312E16, 6.256798737436976E16, 4.980689067614608E16, 1.5403465934198848E16, 3.321384783925924E16, 6.648181016979959E15, 4.5647726479570384E16, 5.7652419741199952E16, 2.3124984686570448E16},
                {5.0980145831643024E16, 3.2662756275523472E16, 1.8383962863620116E16, 2.084184074502422E16, 4.1117722522325176E16, 3.947055227802436E16, 6.879843575386884E15, 3.6686422714974224E16, 6.820932864758772E15, 2.0786918625298428E16},
                {1.4925608112910052E16, 6.7022037870812072E16, 6.103366068073392E16, 4.6242557051035848E16, 3.6922879897532904E16, 4.3675180529664496E16, 2.4535081990165944E16, 6.2479154215385928E16, 1.6342936499460852E16, 2.0716056841427488E16},
                {4.2028496189725632E16, 3.29904640102225E16, 9.242394343345704E15, 4.089790125513772E16, 2.3886732802534608E16, 3.9661755987855832E16, 3.3304453195469196E16, 4.2806045698019736E16, 3.2276518720515948E16, 2.8907200482530252E16},
                {9.057128499163922E15, 2.4692557432317025E15, 8.055780901518024E15, 3.3370388285195688E16, 5.6458697307110008E16, 1.3406451058235196E16, 6.2974965232894976E16, 4.6334272238542248E16, 2.4667864733072584E16, 4.7043598364738648E16},
                {3.07658030375734E16, 1.3260417126847232E16, 6.5894976981889232E16, 6.4977330158542344E16, 3.8000349193615008E16, 3.9705344582841096E16, 1.1764066728113386E16, 5.2032730202714312E16, 1.0583088931690132E16, 4.4979401713096384E16}};

        double[][] wl2 = {{4.4260439666514648E16, 6.014075509740036E13, 1.8303939657949836E16, 2.415439483035292E16, 5.3517281382966696E16, 5.51157769204368E16, 2.0293299782568104E16, 1.4362235177075535E15, 4.8324310205913592E16, 2.1810748353872988E16},
                {5.1643166139169464E16, 2.1574964790647832E16, 8.641420432604084E15, 3.562402529853092E16, 5.192730852700126E15, 1.558451004926827E15, 1.0259007321488346E16, 2.7954119024811124E16, 6.5166346819787464E16, 5.7869299682998824E16},
                {1.2766258171733956E16, 4.7651548059309912E16, 6.6975219012139576E16, 6.0098047341177448E16, 3.4007650171611696E16, 1.2848363794557385E15, 1.4117973917169956E16, 4.640913188316788E16, 3.671339084462396E16, 6.5695228474196096E16},
                {2.6036158113291512E16, 6.5544290011836616E16, 8.703399111127467E15, 5.5349921003726408E16, 3.117576024386634E16, 1.6471297215307536E16, 4.6195617284356656E16, 1.8244320644111908E16, 4.7071412279263504E16, 2.7561982013360644E16},
                {2.1035703831817552E16, 1.3274340385568664E16, 6.4433135018840184E16, 2.197166616919638E16, 7.669960463600047E15, 7.078476039667146E15, 5.7750674826919576E16, 5.3460238999990328E16, 1.5870606295130374E16, 1.0832251893636682E16},
                {5.9772852740188608E16, 1.7145844517119536E16, 3.5148399315270972E16, 5.200409460756207E15, 4.9931334252354136E16, 2.9940262874112276E16, 7.190562924044409E15, 4.554712085531674E13, 6.5878041150011704E16, 3.927352882856592E14},
                {2.016755970164318E16, 5.733725573430014E15, 3.4479203934517412E16, 4.9238079910878E16, 9.954102561244586E15, 2.8833844234399304E16, 2.2404170684845772E16, 2.8260344177452808E16, 3.3438604859946416E16, 3.1075388306897528E16},
                {3.1596015937683464E16, 5.34458531447218E16, 2.2268671273151108E16, 2.1371132404612564E16, 5.1920097957320288E16, 1.9637686436558892E16, 4.9695933910018808E16, 5.0513224409767808E16, 3.3025015000559752E16, 2.2812475950047152E16},
                {4.5374628614633224E16, 6.5897015210123368E16, 1.6486202947987726E16, 4.5125839273535168E16, 4.3334171708442544E16, 5.1349626409518072E16, 2.2724810710554996E16, 3.1481448806725352E16, 5.8725229493989712E16, 6.0858448788868168E16},
                {3.8999844357380424E16, 1.1962499004678796E16, 1.1283414905927584E16, 3.7176058213678608E16, 3.0449346527931028E16, 5.4703710175448312E16, 3.2570598464758628E16, 2.513470738517614E16, 2.2367146234277332E16, 5.9583009552852352E16}};

        double[][] wl3 = {{2.0208518024472438E15, -2.8128614277918108E16, 2.32314737307306E16, -1.7441650611938542E16, 2.0612545599167364E16, -2.0778833958184256E16, -4.620366017883346E15, 3.2017772608226436E16, -5.069665141772058E15, -1.8435137328754415E15},
                {-1.949365924890682E16, 2.8604273591076176E16, -2.5451239353310352E16, -5.330425997023213E15, 3.0438767424788788E16, -1.2308346823126556E16, 1.6784731468276432E16, -2.3447963320218112E16, 3.7865979839232044E14, 9.825202460051786E15},
                {-2.789797231965802E16, -3.6001754388352792E16, -2.3727965257621788E16, 4.921943450052615E15, -9.846397360147138E15, 1.6996370237163744E16, 2.6349125255413184E16, 2.693895622681066E16, 8.710781935206164E15, 1.3556912221132794E16}};

        while(minValue <= 20) {
            for (int i = 0; i < hli1.length; i++) {
                hli1[i] = 0;
                hlo1[i] = 0;
            }

            for (int i = 0; i < hli2.length; i++) {
                hli2[i] = 0;
                hlo2[i] = 0;
            }

            for (int i = 0; i < eli.length; i++) {
                eli[i] = 0;
                elo[i] = 0;
            }

            hli1 = ponderationL1(n, inputValues, minValue, hli1, wl1);
            hlo1 = activationFunctionL1(hlo1, hli1);

            hli2 = ponderationL2(hli2, wl2, hlo1);
            hlo2 = activationFunctionL2(hlo2, hli2);

            eli = ponderationL3(eli, wl3, hlo2);
            elo = activationFunctionL3(elo, eli);

            for (int i = 0; i < elo.length; i++) {
                result += Math.round(elo[i]) + " ";
            }

            if (result.equals("0 0 1 ")) System.out.println(result + " BI");
            else if (result.equals("0 1 0 ")) System.out.println(result + " DEV");
            else if (result.equals("1 0 0 ")) System.out.println(result + " Games");
            else System.out.println(result + " Unindentified-Specialisation field Detected!");

            minValue++;
            result = "";

        }
    }

    public static double[] ponderationL1(int n, double[][] inputValues, int minValue, double[] hli1, double[][] wl1) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < inputValues[i].length; j++) {
                hli1[i] += inputValues[minValue][j] * wl1[j][i];
            }
        }
        return hli1;
    }

    public static double[] activationFunctionL1(double[] hlo1, double[] hli1) {
        for (int i = 0; i < hlo1.length; i++) {
            hlo1[i] = 1/(1 + Math.exp(-hli1[i]));        }
        return hlo1;
    }

    public static double[] ponderationL2(double[] hli2, double[][] wl2, double[] hlo1) {
        for (int i = 0; i < wl2.length; i++) {
            for (int j = 0; j < wl2[i].length; j++) {
                hli2[i] += wl2[i][j] * hlo1[j];
            }
        }
        return hli2;
    }

    public static double[] activationFunctionL2(double[] hlo2, double[] hli2) {
        for (int i = 0; i < hlo2.length; i++) {
            hlo2[i] = 1/(1 + Math.exp(-hli2[i]));        }
        return hlo2;
    }

    public static double[] ponderationL3(double[] eli, double[][] wl3, double[] hlo2) {
        for (int i = 0; i < wl3.length; i++) {
            for (int j = 0; j < wl3[i].length; j++) {
                eli[i] += wl3[i][j] * hlo2[j];
            }
        }
        return eli;
    }

    public static double[] activationFunctionL3(double[] elo, double[] eli) {
        for (int i = 0; i < elo.length; i++) {
            elo[i] = 1/(1 + Math.exp(-eli[i]));
        }
        return elo;
    }
}